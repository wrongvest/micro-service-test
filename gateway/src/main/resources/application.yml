server:
  port: 8050

spring:
  application:
    name: service-gateway
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.31.163:8848
        group: service-group
        namespace: service
      config:
        server-addr: 192.168.31.163:8848
        group: service-group
        namespace: service
        refresh-enabled: true
        shared-configs:
          - group: service-group
            datatId: application.yml
            namespace: service
#          - group: service-group
#            datatId: sentinel.json
#            namespace: service
    sentinel:
      transport:
        dashboard: 127.0.0.1:8080
        port: 8719
      scg:
        enabled: true
        order: -2147483648 # 过滤器顺序，默认为 -2147483648 最高优先级
        fallback:
          mode:  # fallback 模式，目前有三种：response、redirect、空
          # 对应 response 模式
          response-status: 429 # 响应状态码，默认为 429
          response-body: This request is blocked by sentinel111. # 响应内容，默认为空
          content-type: application/json # 内容类型，默认为 application/json

          # 对应 redirect 模式
#          redirect: http://www.baidu.com
      datasource:
        flow-rulers:
          nacos:
            server-addr: 192.168.31.163:8848
            namespace: service
            dataId: ${spring.application.name}-flow-rules
            groupId: service-group
            data-type: json
            rule-type: flow
        gw-flow:
          nacos:
            server-addr: 192.168.31.163:8848
            namespace: service
            dataId: ${spring.application.name}-gw-flow
            groupId: service-group
            data-type: json
            rule-type: gw-flow
#        gw-api-group:
#          nacos:
#            server-addr: 192.168.31.163:8848
#            namespace: service
#            dataId: ${spring.application.name}-gw-flow
#            groupId: service-group
#            data-type: json
#            rule-type: gw-flow
    gateway:
      enabled: true
      discovery:
        locator:
          lower-case-service-id: true
      routes:
        - id: service-order
          uri: lb://service-order
          predicates:
            - Path=/order/**
        - id: service-user
          uri: lb://service-user
          predicates:
            - Path=/user/**
#          filters:
#            - RewritePath=/httpbin/(?<segment>.*), /$\{segment}
